def stop_container(container_name) {
        sh 'docker stop ' + container_name
}

def exec(container_name, command) {
    try {
        def cmd = 'docker exec ' + container_name + ' ' + command
        sh cmd
    } catch(error) {
        stop_container(container_name)
    }
}

node {
stage('Run NodeJS Docker') {
    def nodejs_img = docker.image('node:lts-alpine')
    
    try { 
        def nodejs_container = nodejs_img.run("-dt --rm -p 3000:3000 -w /app/src -v ${env.WORKSPACE}:/app/src --name bibim-nodejs")
    } catch(error) {
        echo "Don't worry, program is in good status."
        stop_container('bibim-nodejs')
        def nodejs_container = nodejs_img.run("-dt --rm -p 3000:3000 -w /app/src -v ${env.WORKSPACE}:/app/src --name bibim-nodejs")
    } 
}stage('Build') {
    exec('bibim-nodejs', 'npm install')
}
stage('Launch Web') {
    exec('node-test', 'npm start &')
    exec('node-test', 'sleep 1')
}stage('Run ZAP Docker') {
    def zap_img = docker.image('owasp/zap2docker-stable')
    
    try { 
        def zap_container = zap_img.run("-dt --rm --name bibim-zap")
    } catch(error) {
        stop_container('bibim-zap')
        echo "Don't worry, program is in good status."
        def zap_container = zap_img.run("-dt --rm --name bibim-zap")
    } 
}stage('Execute ZAP') {
    exec('bibim-zap', 'mkdir /zap/wrk')
    exec('bibim-zap', 'zap-full-scan.py -t http://112.167.178.26:3000 -J /zap/wrk/report.json')
}stage('Copy Report') {
    sh "docker cp bibim-zap:/zap/wrk/report.json ${env.WROKSPACE}/report.json"
}stage('Stop docker') {
    zap_container.stop()
}stage('Stop NodeJS') {
    nodejs_container.stop()
}stage('Run CodeQL') {
    sh "/home/onedayginger/bibim-bob/bob-codeql/run.py -l javascript -s ${env.WORKSPACE} -o /home/onedayginger"
}}
